version: "3.9"

services:
  nosqldb:
    build:
      context: ./docker/nosqldb
      args:
        DK_UID: ${DK_UID}
        DK_GID: ${DK_GID}
        NOSQLDB_INITDB_DATABASES: ${NOSQLDB_INITDB_DATABASES}
    container_name: "${DK_PROJECT_NAME}-nosqldb"
    ports:
      - "${NOSQLDB_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${NOSQLDB_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${NOSQLDB_INITDB_ROOT_PASSWORD}
    # volumes:
    #   - "${NOSQLDB_VOLUME}:/data/db"
    #   - "${NOSQLDB_VOLUME_DUMP}:/dump"
    networks:
      - backend

  rabbitmq:
    build:
      context: ./docker/rabbitmq
      args:
        DK_UID: ${DK_UID}
        DK_GID: ${DK_GID}
    container_name: "${DK_PROJECT_NAME}-rabbitmq"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    # volumes:
    #   - "${RABBITMQ_VOLUME}:/var/lib/rabbitmq"
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGER_PORT:-8080}:15672"
    networks:
      - backend

  api:
    build:
      context: .
      args:
        DK_UID: ${DK_UID}
        DK_GID: ${DK_GID}
    container_name: "${DK_PROJECT_NAME}-api"
    environment:
      ENV_DOCKER: ${ENV_DOCKER}
      NODE_ENV: ${DK_ENV}
      API_PORT: ${API_NEST_PORT:-3333}
      NOSQLDB_URI: ${NOSQLDB_URI}
      NOSQLDB_URI_DOCKER: ${NOSQLDB_URI_DOCKER}
      DATABASE_URL: ${DATABASE_URL}
      RABBITMQ_URI: ${RABBITMQ_URI}
      RABBITMQ_URI_DOCKER: ${RABBITMQ_URI_DOCKER}
      MAIL_SERVICE: ${MAIL_SERVICE}
      MAIL_SMTP_PORT: ${MAIL_SMTP_PORT}
      MAIL_EMAIL: ${MAIL_EMAIL}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    ports:
      - "${API_NEST_PORT}:3333"
      - "9240:9240"
    volumes:
      - "${PWD}:/home/node/project"
    networks:
      - backend
    depends_on:
      nosqldb:
        condition: service_started
      rabbitmq:
        condition: service_started
    command: [ "npm", "run", "start:dev" ]

networks:
  backend:
